Snapshot 0.6.0 (2005-08-01 Steve Chaplin <steve1097@yahoo.com.au>)
==================================================================
Changes since 0.5.1:

General changes:
 Pycairo has been updated to work with cairo 0.6.0, including using cairo's new
 error handling scheme.

New features:
 cairo.CONTENT_COLOR, cairo.ALPHA, cairo.COLOR_ALPHA have been added for 
 working with surfaces.

 A new class cairo.FontOptions has been added.

 cairo.ImageSurface.create_from_png() now accepts a filename string or a file
 object

 New wrapper functions have been added for cairo_get_font_options, 
 cairo_set_font_options and cairo_surface_get_font_options.


Snapshot 0.5.1 (2005-06-22 Steve Chaplin <steve1097@yahoo.com.au>)
==================================================================
Changes since 0.5.0:
New features:
- new class cairo.Win32Surface (Niki Spahiev)
- cairo.HAS_WIN32_SURFACE, cairo.HAS_PS_SURFACE etc are defined to give access
  to the values from cairo-features.h

Fixes:
- fix cairo_mask, cairo_mask_surface and cairo_stroke_preserve wrappers
- compile properly against GTK+ 2.7 (Gustavo Carneiro)
- other small fixes, including fixes for gcc 4.0 warnings


Snapshot 0.5.0 (2005-05-20 Steve Chaplin <steve1097@yahoo.com.au>)
==================================================================
This version has many changes which update Pycairo to the new cairo API. The 
change list is not duplicated here, instead see the cairo/NEWS file for full 
details of all these API changes.

Pycairo method names that were different from the underlying cairo function 
names have been changed to make Pycairo more closely follow cairo and so
enable the cairo documentation to be used for writing Pycairo programs.
NOTES has been updated to list the differences between the C API and the
Pycairo API.

Context.copy_path() has been implemented, it returns a Path instance which
supports the iterator protocol.

Python 2.3 is now required.

New examples:
examples/warpedtext.py 
	shows usage of the Path iterator

examples/cairo_snippets/
	shows many of the 'cairo-demo/cairo_snippets' examples

examples/gtk/png_view.py
	example using cairo.ImageSurface.create_from_png()


Snapshot 0.4.0 (2005-03-10 Steve Chaplin <steve1097@yahoo.com.au>)
==================================================================

New cairo bindings:
	cairo_font_extents

Bindings removed:
	cairo_font_set_transform
	cairo_font_current_transform

New examples:
	gtk/hangman.py

Other:
	Changed version numbering to correspond directly with the Cairo
	version Pycairo was developed to work with. So, for example,
	Pycairo version 0.4.0 represents the Pycairo version that has been 
	developed and tested with Cairo 0.4.0.

Snapshot 0.1.4 (2005-01-12 Steve Chaplin <steve1097@yahoo.com.au>)
===================================================================
The Pycairo license has changed so that it is now dual-licensed under the LGPL
and the MPL, the same as Cairo itself. For details see the COPYING file as
well as COPYING-LGPL-2.1 and COPYING-MPL-1.1.

New cairo bindings:
	cairo_pdf_surface_create
	cairo_set_target_pdf

New libsvg-cairo bindings:
	svg_cairo_parse
	svg_cairo_parse_buffer
	svg_cairo_render
	svg_cairo_get_size

Other:
	Added --without-pygtk configure option.
	Renamed the Pycairo API _new() functions to _wrap() to allow _new() to 
	be used for python __new__ functions.
	New examples: svg2png.py and svgview.py.


Snapshot 0.1.3 (2004-11-24 Carl Worth <cworth@cworth.org>)
==========================================================
After the recent server compromise we discarded all unsigned
snapshots. That left us without a pycairo snapshot.

Additionally, there were no tags in the source repository so I
couldn't recreate the 0.1.2 snapshot, so here's a new 0.1.3 snapshot.

I apologize if I botched the version number or left something
significant out of this announcement---I'm not the one who will
usually be doing pycairo maintenance.

New bindings:
	current_path
	current_path_flat
	current_font_extents

Changes:
	fill_extents,stroke_extents: Remove unnecessary args and
	change from a method to an attribute.

Other:
	Added two new examples: context-subclass.py and warpedtext.py
